# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test routes in the production environment.
# If you need test routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes" 

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/". This is because NGINX is blocking every uri containing the string "test-only" in production.
# Failing to follow this rule may result in test routes deployed in production.

GET        /investment-tax-relief/test-only/clear-cache                                 testOnly.controllers.ClearCacheController.clearCache
GET        /investment-tax-relief/test-only/reset-throttle                              testOnly.controllers.ResetThrottleController.resetThrottle
GET        /investment-tax-relief/test-only/reset-tokens                                testOnly.controllers.ResetTokenController.resetTokens

#eis
GET        /investment-tax-relief/test-only/test-endpoint/eis/page-1                        testOnly.controllers.eis.TestEndpointEISController.showPageOne(schemes: Option[Int])
POST       /investment-tax-relief/test-only/test-endpoint/eis/page-1                        testOnly.controllers.eis.TestEndpointEISController.submitPageOne

GET        /investment-tax-relief/test-only/test-endpoint/eis/page-2                        testOnly.controllers.eis.TestEndpointEISController.showPageTwo
POST       /investment-tax-relief/test-only/test-endpoint/eis/page-2                        testOnly.controllers.eis.TestEndpointEISController.submitPageTwo

#seis
GET        /investment-tax-relief/test-only/test-endpoint/seis                              testOnly.controllers.seis.TestEndpointSEISController.showPageOne(schemes: Option[Int])
POST       /investment-tax-relief/test-only/test-endpoint/seis                              testOnly.controllers.seis.TestEndpointSEISController.submitPageOne

#eisseis
GET        /investment-tax-relief/test-only/test-endpoint/eisseis/page-1                    testOnly.controllers.eisseis.TestEndpointEISSEISController.showPageOne(schemes: Option[Int])
POST       /investment-tax-relief/test-only/test-endpoint/eisseis/page-1                    testOnly.controllers.eisseis.TestEndpointEISSEISController.submitPageOne

GET        /investment-tax-relief/test-only/test-endpoint/eisseis/page-2                    testOnly.controllers.eisseis.TestEndpointEISSEISController.showPageTwo
POST       /investment-tax-relief/test-only/test-endpoint/eisseis/page-2                    testOnly.controllers.eisseis.TestEndpointEISSEISController.submitPageTwo

# Add all the application routes to the prod.routes file
->         /                          prod.Routes

